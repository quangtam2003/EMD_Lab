<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\ex4.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\ex4.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6140002: Last Updated: Thu May 16 12:48:57 2024
<BR><P>
<H3>Maximum Stack Usage =        176 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; move &rArr; moveUp &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[3a]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">MemManage_Handler</a><BR>
 <LI><a href="#[4]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">BusFault_Handler</a><BR>
 <LI><a href="#[5]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">UsageFault_Handler</a><BR>
 <LI><a href="#[6]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">SVC_Handler</a><BR>
 <LI><a href="#[7]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">DebugMon_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[9]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SysTick_Handler</a><BR>
 <LI><a href="#[20]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[20]">ADC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[21]">BOD_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2c]">CANActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[23]">CAN_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[24]">DMA_IRQHandler</a> from gpdma_lpc17xx.o(.text.DMA_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1c]">EINT0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1d]">EINT1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1e]">EINT2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1f]">EINT3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[26]">ENET_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[14]">I2C0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[15]">I2C1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[16]">I2C2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[25]">I2S_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[28]">MCPWM_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1a]">PLL0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2a]">PLL1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[13]">PWM1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[29]">QEI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[27]">RIT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[1b]">RTC_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[17]">SPI_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[18]">SSP0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[38]">SSP1_Control</a> from ssp_lpc17xx.o(.text.SSP1_Control) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[37]">SSP1_GetDataCount</a> from ssp_lpc17xx.o(.text.SSP1_GetDataCount) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[39]">SSP1_GetStatus</a> from ssp_lpc17xx.o(.text.SSP1_GetStatus) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[19]">SSP1_IRQHandler</a> from ssp_lpc17xx.o(.text.SSP1_IRQHandler) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[31]">SSP1_Initialize</a> from ssp_lpc17xx.o(.text.SSP1_Initialize) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[33]">SSP1_PowerControl</a> from ssp_lpc17xx.o(.text.SSP1_PowerControl) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[35]">SSP1_Receive</a> from ssp_lpc17xx.o(.text.SSP1_Receive) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[34]">SSP1_Send</a> from ssp_lpc17xx.o(.text.SSP1_Send) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[36]">SSP1_Transfer</a> from ssp_lpc17xx.o(.text.SSP1_Transfer) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[32]">SSP1_Uninitialize</a> from ssp_lpc17xx.o(.text.SSP1_Uninitialize) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[30]">SSP_GetCapabilities</a> from ssp_lpc17xx.o(.text.SSP_GetCapabilities) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[2f]">SSP_GetVersion</a> from ssp_lpc17xx.o(.text.SSP_GetVersion) referenced from ssp_lpc17xx.o(.rodata.Driver_SPI1)
 <LI><a href="#[6]">SVC_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2d]">SystemInit</a> from system_lpc17xx.o(.text.SystemInit) referenced from startup_lpc17xx.o(.text)
 <LI><a href="#[b]">TIMER0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[c]">TIMER1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[d]">TIMER2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[e]">TIMER3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[f]">UART0_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[10]">UART1_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[11]">UART2_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[12]">UART3_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2b]">USBActivity_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[22]">USB_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from startup_lpc17xx.o(.text) referenced from startup_lpc17xx.o(RESET)
 <LI><a href="#[2e]">__main</a> from __main.o(!!!main) referenced from startup_lpc17xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[2e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[3d]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[88]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[89]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[3e]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[8a]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[44]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[8b]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[3f]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[8e]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[90]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[91]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[92]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[93]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[94]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[95]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[96]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[97]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[98]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[99]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[9a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[9b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[9c]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[9d]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[9e]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[9f]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[49]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[a0]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[a1]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[a2]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[a3]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[a4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[a5]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[a6]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[3c]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[a7]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[41]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[43]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[a8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[45]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; move &rArr; moveUp &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[a9]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4e]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[48]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[aa]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[81]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printFruit
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>CANActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>EINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>EINT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>EINT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>ENET_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2S_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>MCPWM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>PLL0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>PLL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PWM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>SPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TIMER3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USBActivity_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc17xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc17xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4c]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[40]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[ab]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[42]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[47]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ae]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4d]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[af]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[b0]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[4f]"></a>GLCD_ClearScreen</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.GLCD_ClearScreen))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GLCD_ClearScreen &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24]"></a>DMA_IRQHandler</STRONG> (Thumb, 250 bytes, Stack size 40 bytes, gpdma_lpc17xx.o(.text.DMA_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DMA_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clear_Channel_active_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>GLCD_DrawChar</STRONG> (Thumb, 188 bytes, Stack size 32 bytes, glcd_mcb1700.o(.text.GLCD_DrawChar))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GLCD_DrawChar &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawString
</UL>

<P><STRONG><a name="[58]"></a>GLCD_DrawHLine</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.GLCD_DrawHLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GLCD_DrawHLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawRectangle
</UL>

<P><STRONG><a name="[59]"></a>GLCD_DrawRectangle</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.GLCD_DrawRectangle))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawVLine
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawHLine
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rePrintFruit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printSnakeW
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printSnakeB
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printFruit
</UL>

<P><STRONG><a name="[5b]"></a>GLCD_DrawString</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.GLCD_DrawString))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GLCD_DrawString &rArr; GLCD_DrawChar &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>GLCD_DrawVLine</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.GLCD_DrawVLine))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_stop
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_only
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawRectangle
</UL>

<P><STRONG><a name="[5c]"></a>GLCD_Initialize</STRONG> (Thumb, 1408 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.GLCD_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GLCD_Initialize &rArr; rd_reg &rArr; rd_dat &rArr; spi_tran
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PortClock
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_reg
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_id_man
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[76]"></a>GLCD_SetBackgroundColor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, glcd_mcb1700.o(.text.GLCD_SetBackgroundColor))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>GLCD_SetFont</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, glcd_mcb1700.o(.text.GLCD_SetFont))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[80]"></a>GLCD_SetForegroundColor</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, glcd_mcb1700.o(.text.GLCD_SetForegroundColor))
<BR><BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rePrintFruit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printSnakeW
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printSnakeB
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printFruit
</UL>

<P><STRONG><a name="[87]"></a>GPIO_PinRead</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text.GPIO_PinRead))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran_man
</UL>

<P><STRONG><a name="[60]"></a>GPIO_PinWrite</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text.GPIO_PinWrite))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran_man
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_id_man
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[5d]"></a>GPIO_PortClock</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text.GPIO_PortClock))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[5f]"></a>GPIO_SetDir</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, gpio_lpc17xx.o(.text.GPIO_SetDir))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran_man
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_id_man
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[5e]"></a>PIN_Configure</STRONG> (Thumb, 116 bytes, Stack size 20 bytes, pin_lpc17xx.o(.text.PIN_Configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Uninitialize
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_id_man
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[19]"></a>SSP1_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSP1_IRQHandler &rArr; SSPx_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>SystemInit</STRONG> (Thumb, 204 bytes, Stack size 0 bytes, system_lpc17xx.o(.text.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc17xx.o(.text)
</UL>
<P><STRONG><a name="[74]"></a>Timer0_Init</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, ex4.o(.text.Timer0_Init))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>checkDeath</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, ex4.o(.text.checkDeath))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>checkEat</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, ex4.o(.text.checkEat))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = checkEat &rArr; printFruit &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printFruit
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[79]"></a>delayms</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ex4.o(.text.delayms))
<BR><BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46]"></a>main</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, ex4.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = main &rArr; move &rArr; moveUp &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rePrintFruit
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printFruit
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delayms
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkEat
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkDeath
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Timer0_Init
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetFont
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetBackgroundColor
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawString
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[77]"></a>move</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ex4.o(.text.move))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = move &rArr; moveUp &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveUp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveRight
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveLeft
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveDown
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7d]"></a>moveDown</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ex4.o(.text.moveDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = moveDown &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSnake
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move
</UL>

<P><STRONG><a name="[7b]"></a>moveLeft</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ex4.o(.text.moveLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = moveLeft &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSnake
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move
</UL>

<P><STRONG><a name="[7e]"></a>moveRight</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ex4.o(.text.moveRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = moveRight &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSnake
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move
</UL>

<P><STRONG><a name="[7c]"></a>moveUp</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ex4.o(.text.moveUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = moveUp &rArr; updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSnake
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move
</UL>

<P><STRONG><a name="[73]"></a>printFruit</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, ex4.o(.text.printFruit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = printFruit &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetForegroundColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawRectangle
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;checkEat
</UL>

<P><STRONG><a name="[82]"></a>printSnakeB</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, ex4.o(.text.printSnakeB))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = printSnakeB &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetForegroundColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSnake
</UL>

<P><STRONG><a name="[83]"></a>printSnakeW</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ex4.o(.text.printSnakeW))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetForegroundColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;updateSnake
</UL>

<P><STRONG><a name="[78]"></a>rePrintFruit</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ex4.o(.text.rePrintFruit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = rePrintFruit &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetForegroundColor
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawRectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7f]"></a>updateSnake</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ex4.o(.text.updateSnake))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = updateSnake &rArr; printSnakeW &rArr; GLCD_DrawRectangle &rArr; GLCD_DrawVLine &rArr; GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printSnakeW
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;printSnakeB
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveUp
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveRight
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveLeft
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;moveDown
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[50]"></a>GLCD_SetWindow</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.GLCD_SetWindow))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GLCD_SetWindow &rArr; wr_reg
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawVLine
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawHLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[64]"></a>delay_ms</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, glcd_mcb1700.o(.text.delay_ms))
<BR><BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran_man
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[84]"></a>rd_dat</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.rd_dat))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rd_dat &rArr; spi_tran
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_reg
</UL>

<P><STRONG><a name="[61]"></a>rd_id_man</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.rd_id_man))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rd_id_man &rArr; spi_tran_man
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran_man
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[62]"></a>rd_reg</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, glcd_mcb1700.o(.text.rd_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rd_reg &rArr; rd_dat &rArr; spi_tran
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_cmd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_dat
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[85]"></a>spi_tran</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.spi_tran))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = spi_tran
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wr_dat_start
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_dat
</UL>

<P><STRONG><a name="[86]"></a>spi_tran_man</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.spi_tran_man))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = spi_tran_man
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinRead
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_id_man
</UL>

<P><STRONG><a name="[51]"></a>wr_cmd</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.wr_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wr_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawVLine
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawHLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rd_reg
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[53]"></a>wr_dat_only</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, glcd_mcb1700.o(.text.wr_dat_only))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = wr_dat_only
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawVLine
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawHLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[52]"></a>wr_dat_start</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, glcd_mcb1700.o(.text.wr_dat_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wr_dat_start &rArr; spi_tran
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_tran
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawVLine
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawHLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[54]"></a>wr_dat_stop</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, glcd_mcb1700.o(.text.wr_dat_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wr_dat_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawVLine
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawHLine
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_DrawChar
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_ClearScreen
</UL>

<P><STRONG><a name="[63]"></a>wr_reg</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, glcd_mcb1700.o(.text.wr_reg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = wr_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_SetWindow
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GLCD_Initialize
</UL>

<P><STRONG><a name="[6e]"></a>GetSSPClockFreq</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.GetSSPClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
</UL>

<P><STRONG><a name="[38]"></a>SSP1_Control</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SSP1_Control &rArr; SSPx_Control &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Control
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[37]"></a>SSP1_GetDataCount</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_GetDataCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP1_GetDataCount
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GetDataCount
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[39]"></a>SSP1_GetStatus</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_GetStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP1_GetStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_GetStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[31]"></a>SSP1_Initialize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SSP1_Initialize &rArr; SSPx_Initialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Initialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[33]"></a>SSP1_PowerControl</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_PowerControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SSP1_PowerControl &rArr; SSPx_PowerControl
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[35]"></a>SSP1_Receive</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP1_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Receive
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[34]"></a>SSP1_Send</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP1_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Send
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[36]"></a>SSP1_Transfer</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_Transfer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSP1_Transfer
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Transfer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[32]"></a>SSP1_Uninitialize</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSP1_Uninitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SSP1_Uninitialize &rArr; SSPx_Uninitialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_Uninitialize
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[30]"></a>SSP_GetCapabilities</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSP_GetCapabilities))
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[2f]"></a>SSP_GetVersion</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSP_GetVersion))
<BR>[Address Reference Count : 1]<UL><LI> ssp_lpc17xx.o(.rodata.Driver_SPI1)
</UL>
<P><STRONG><a name="[55]"></a>SSPx_Control</STRONG> (Thumb, 900 bytes, Stack size 48 bytes, ssp_lpc17xx.o(.text.SSPx_Control))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = SSPx_Control &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSSPClockFreq
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetDir
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_PinWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Control
</UL>

<P><STRONG><a name="[65]"></a>SSPx_GetDataCount</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSPx_GetDataCount))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_GetDataCount
</UL>

<P><STRONG><a name="[66]"></a>SSPx_GetStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSPx_GetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_GetStatus
</UL>

<P><STRONG><a name="[67]"></a>SSPx_IRQHandler</STRONG> (Thumb, 206 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSPx_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSPx_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_IRQHandler
</UL>

<P><STRONG><a name="[68]"></a>SSPx_Initialize</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ssp_lpc17xx.o(.text.SSPx_Initialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SSPx_Initialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Initialize
</UL>

<P><STRONG><a name="[69]"></a>SSPx_PowerControl</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, ssp_lpc17xx.o(.text.SSPx_PowerControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SSPx_PowerControl
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_DisableIRQ
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_ClearPendingIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_PowerControl
</UL>

<P><STRONG><a name="[6a]"></a>SSPx_Receive</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSPx_Receive))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Receive
</UL>

<P><STRONG><a name="[6b]"></a>SSPx_Send</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSPx_Send))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Send
</UL>

<P><STRONG><a name="[6c]"></a>SSPx_Transfer</STRONG> (Thumb, 102 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.SSPx_Transfer))
<BR><BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Transfer
</UL>

<P><STRONG><a name="[6d]"></a>SSPx_Uninitialize</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ssp_lpc17xx.o(.text.SSPx_Uninitialize))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SSPx_Uninitialize &rArr; PIN_Configure
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_Configure
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSP1_Uninitialize
</UL>

<P><STRONG><a name="[70]"></a>__NVIC_ClearPendingIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.__NVIC_ClearPendingIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>

<P><STRONG><a name="[6f]"></a>__NVIC_DisableIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.__NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>

<P><STRONG><a name="[71]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ssp_lpc17xx.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SSPx_PowerControl
</UL>

<P><STRONG><a name="[56]"></a>Clear_Channel_active_flag</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, gpdma_lpc17xx.o(.text.Clear_Channel_active_flag))
<BR><BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_IRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
